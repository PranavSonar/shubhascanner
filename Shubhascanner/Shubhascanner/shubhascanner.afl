
// call the plugin


            AddTextColumn(FullName(), "Company Name");
			
            AddColumn(Volume, "Last Volume ");
            AddColumn(Close, "Last Close  ");
			


if(ParamToggle("HaramiCross Pattern?","No,Yes",1))
{
HaramiCross1=HaramiCross(Open,High,Low,Close, 5);
AddColumn(HaramiCross1,"HaramiCross" );
}
if(ParamToggle("ShortLine Pattern?","No,Yes",1))
{
ShortLine1=ShortLine(Open,High,Low,Close, 5);
AddColumn(ShortLine1,"ShortLine" );
}

if(ParamToggle("Crows Pattern?","No,Yes",1))
{
Crows1=Crows(Open,High,Low,Close, 5);
AddColumn(Crows1,"Crows" );
}
if(ParamToggle("BlackCrows Pattern?","No,Yes",1))
{
BlackCrows1=BlackCrows(Open,High,Low,Close, 5);
AddColumn(BlackCrows1,"BlackCrows" );
}
if(ParamToggle("Inside Pattern?","No,Yes",1))
{
Inside1=Inside(Open,High,Low,Close, 5);
AddColumn(Inside1,"Inside" );
}

if(ParamToggle("LineStrike Pattern?","No,Yes",1))
{
LineStrike1=LineStrike(Open,High,Low,Close, 5);
AddColumn(LineStrike1,"LineStrike" );
}

if(ParamToggle("Outside Pattern?","No,Yes",1))
{
Outside1=Outside(Open,High,Low,Close, 5);
AddColumn(Outside1,"Outside" );
}

if(ParamToggle("StarsInSouth Pattern?","No,Yes",1))
{
StarsInSouth1=StarsInSouth(Open,High,Low,Close, 5);
AddColumn(StarsInSouth1,"StarsInSouth" );
}
if(ParamToggle("AdvanceBlock Pattern?","No,Yes",1))
{
AdvanceBlock1=AdvanceBlock(Open,High,Low,Close, 5);
AddColumn(AdvanceBlock1,"AdvanceBlock" );
}

if(ParamToggle("BeltHold Pattern?","No,Yes",1))
{
BeltHold1=BeltHold(Open,High,Low,Close, 5);
AddColumn(BeltHold1,"BeltHold" );
}

if(ParamToggle("HignWave Pattern?","No,Yes",1))
{
HignWave1=HignWave(Open,High,Low,Close, 5);
AddColumn(HignWave1,"HignWave" );
}

if(ParamToggle("Hikkake Pattern?","No,Yes",1))
{
Hikkake1=Hikkake(Open,High,Low,Close, 5);
AddColumn(Hikkake1,"Hikkake" );
}


if(ParamToggle("HomingPigeon Pattern?","No,Yes",1))
{
HomingPigeon1=HomingPigeon(Open,High,Low,Close, 5);
AddColumn(HomingPigeon1,"HomingPigeon" );
}


if(ParamToggle("Identical3Crows Pattern?","No,Yes",1))
{
Identical3Crows1=Identical3Crows(Open,High,Low,Close, 5);
AddColumn(Identical3Crows1,"Identical3Crows" );
}


if(ParamToggle("HikkakeMod Pattern?","No,Yes",1))
{
HikkakeMod1=HikkakeMod(Open,High,Low,Close, 5);
AddColumn(HikkakeMod1,"HikkakeMod" );
}


if(ParamToggle("Kicking Pattern?","No,Yes",1))
{
Kicking1=Kicking(Open,High,Low,Close, 5);
AddColumn(Kicking1,"Kicking" );
}


if(ParamToggle("KickingByLength Pattern?","No,Yes",1))
{
KickingByLength1=KickingByLength(Open,High,Low,Close, 5);
AddColumn(KickingByLength1,"KickingByLength" );
}

if(ParamToggle("LadderBottom Pattern?","No,Yes",1))
{
LadderBottom1=LadderBottom(Open,High,Low,Close, 5);
AddColumn(LadderBottom1,"LadderBottom" );
}
if(ParamToggle("LongLeggedDoji Pattern?","No,Yes",1))
{
LongLeggedDoji1=LongLeggedDoji(Open,High,Low,Close, 5);
AddColumn(LongLeggedDoji1,"LongLeggedDoji" );
}

if(ParamToggle("LongLine Pattern?","No,Yes",1))
{
LongLine1=LongLine(Open,High,Low,Close, 5);
AddColumn(LongLine1,"LongLine" );
}

if(ParamToggle("Marubozu Pattern?","No,Yes",1))
{
Marubozu1=Marubozu(Open,High,Low,Close, 5);
AddColumn(Marubozu1,"Marubozu" );
}

if(ParamToggle("MatchingLow Pattern?","No,Yes",1))
{
MatchingLow1=MatchingLow(Open,High,Low,Close, 5);
AddColumn(MatchingLow1,"MatchingLow" );
}

if(ParamToggle("MatHold Pattern?","No,Yes",1))
{
MatHold1=MatHold(Open,High,Low,Close, 5);
AddColumn(MatHold1,"MatHold" );
}

if(ParamToggle("OnNeck Pattern?","No,Yes",1))
{
OnNeck1=OnNeck(Open,High,Low,Close, 5);
AddColumn(OnNeck1,"OnNeck" );
}

if(ParamToggle("RickshawMan Pattern?","No,Yes",1))
{
RickshawMan1=RickshawMan(Open,High,Low,Close, 5);
AddColumn(RickshawMan1,"RickshawMan" );
}

if(ParamToggle("SeperatingLines Pattern?","No,Yes",1))
{
SeperatingLines1=SeperatingLines(Open,High,Low,Close, 5);
AddColumn(SeperatingLines1,"SeperatingLines" );
}

if(ParamToggle("RiseFall3Methods Pattern?","No,Yes",1))
{
RiseFall3Methods1=RiseFall3Methods(Open,High,Low,Close, 5);
AddColumn(RiseFall3Methods1,"RiseFall3Methods" );
}

if(ParamToggle("SpinningTop Pattern?","No,Yes",1))
{
SpinningTop1=SpinningTop(Open,High,Low,Close, 5);
AddColumn(SpinningTop1,"SpinningTop" );
}

if(ParamToggle("StalledPattern Pattern?","No,Yes",1))
{
StalledPattern1=StalledPattern(Open,High,Low,Close, 5);
AddColumn(StalledPattern1,"StalledPattern" );
}

if(ParamToggle("StickSandwhich Pattern?","No,Yes",1))
{
StickSandwhich1=StickSandwhich(Open,High,Low,Close, 5);
AddColumn(StickSandwhich1,"StickSandwhich" );
}

if(ParamToggle("Takuri Pattern?","No,Yes",1))
{
Takuri1=Takuri(Open,High,Low,Close, 5);
AddColumn(Takuri1,"Takuri" );
}

if(ParamToggle("TasukiGap Pattern?","No,Yes",1))
{
TasukiGap1=TasukiGap(Open,High,Low,Close, 5);
AddColumn(TasukiGap1,"TasukiGap" );
}

if(ParamToggle("Thrusting Pattern?","No,Yes",1))
{
Thrusting1=Thrusting(Open,High,Low,Close, 5);
AddColumn(Thrusting1,"Thrusting" );
}


if(ParamToggle("Tristar Pattern?","No,Yes",1))
{
Tristar1=Tristar(Open,High,Low,Close, 5);
AddColumn(Tristar1,"Tristar" );
}

if(ParamToggle("Unique3River Pattern?","No,Yes",1))
{
Unique3River1=Unique3River(Open,High,Low,Close, 5);
AddColumn(Unique3River1,"Unique3River" );
}

if(ParamToggle("UpsideGap2Crows Pattern?","No,Yes",1))
{
UpsideGap2Crows1=UpsideGap2Crows(Open,High,Low,Close, 5);
AddColumn(UpsideGap2Crows1,"UpsideGap2Crows" );
}

if(ParamToggle("XSideGap3Methods Pattern?","No,Yes",1))
{
XSideGap3Methods1=XSideGap3Methods(Open,High,Low,Close, 5);
AddColumn(XSideGap3Methods1,"XSideGap3Methods" );
}

if(ParamToggle("Ceil Pattern?","No,Yes",1))
{
Ceil1=Ceil(Open,High,Low,Close, 5);
AddColumn(Ceil1,"Ceil" );
}

if(ParamToggle("Cmo Pattern?","No,Yes",1))
{
Cmo1=Cmo(Open,High,Low,Close, 5);
AddColumn(Cmo1,"Cmo" );
}

if(ParamToggle("Correl Pattern?","No,Yes",1))
{
Correl1=Correl(Open,High,Low,Close, 5);
AddColumn(Correl1,"Correl" );
}
if(ParamToggle("Cos Pattern?","No,Yes",1))
{
Cos1=Cos(Open,High,Low,Close, 5);
AddColumn(Cos1,"Cos" );
}


















if(ParamToggle("InNeck Pattern?","No,Yes",1))
{
InNeck1=InNeck(Open,High,Low,Close, 5);
AddColumn(InNeck1,"InNeck" );
}


if(ParamToggle("ConcealBabysWall Pattern?","No,Yes",1))
{
ConcealBabysWall1=ConcealBabysWall(Open,High,Low,Close, 5);
AddColumn(ConcealBabysWall1,"ConcealBabysWall" );
}

if(ParamToggle("CounterAttack Pattern?","No,Yes",1))
{
CounterAttack1=CounterAttack(Open,High,Low,Close, 5);
AddColumn(CounterAttack1,"CounterAttack" );
}

if(ParamToggle("ClosingMarubozu Pattern?","No,Yes",1))
{
ClosingMarubozu1=ClosingMarubozu(Open,High,Low,Close, 5);
AddColumn(ClosingMarubozu1,"ClosingMarubozu" );
}




if(ParamToggle("Breakaway Pattern?","No,Yes",1))
{
Breakaway1=Breakaway(Open,High,Low,Close, 5);
AddColumn(Breakaway1,"Breakaway" );
}

if(ParamToggle("ShootingStar Pattern?","No,Yes",1))
{
ShootingStar1=ShootingStar(Open,High,Low,Close, 5);
AddColumn(ShootingStar1,"ShootingStar" );
}

if(ParamToggle("WhiteSoldiers Pattern?","No,Yes",1))
{
WhiteSoldiers1=WhiteSoldiers(Open,High,Low,Close, 5);
AddColumn(WhiteSoldiers1,"WhiteSoldiers" );
}


if(ParamToggle("Engulfing Pattern?","No,Yes",1))
{
Engulfing=ShubhascannerdllFunc1(Open,High,Low,Close, 5);
AddColumn(Engulfing,"Engulfing" );
}

if(ParamToggle("Harami Pattern?","No,Yes",1))
{
Harami1=Harami(Open,High,Low,Close, 5);
AddColumn(Harami1,"Harami" );
}
if(ParamToggle("MorningStar Pattern?","No,Yes",1))
{
MorningStar1=MorningStar(Open,High,Low,Close, 5);
AddColumn(MorningStar1,"MorningStar" );
}

if(ParamToggle("InvertedHammer Pattern?","No,Yes",1))
{
InvertedHammer1=InvertedHammer(Open,High,Low,Close, 5);
AddColumn(InvertedHammer1,"InvertedHammer" );
}
if(ParamToggle("MorningDojiStar Pattern?","No,Yes",1))
{
MorningDojiStar1=MorningDojiStar(Open,High,Low,Close, 5);
AddColumn(MorningDojiStar1,"MorningDojiStar" );
}


if(ParamToggle("EveningDojiStar Pattern?","No,Yes",1))
{
EveningDojiStar1=EveningDojiStar(Open,High,Low,Close, 5);
AddColumn(EveningDojiStar1,"EveningDojiStar" );
}
if(ParamToggle("EveningStar Pattern?","No,Yes",1))
{
EveningStar1=EveningStar(Open,High,Low,Close, 5);
AddColumn(EveningStar1,"EveningStar" );
}
if(ParamToggle("HangingMan Pattern?","No,Yes",1))
{
HangingMan1=HangingMan(Open,High,Low,Close, 5);
AddColumn(HangingMan1,"HangingMan" );
}

if(ParamToggle("Piercing Pattern?","No,Yes",1))
{
Piercing1=Piercing(Open,High,Low,Close,5);
AddColumn(Piercing1,"Piercing" );
}
if(ParamToggle("doji Pattern?","No,Yes",1))
{
doji1=Doji(Open,High,Low,Close,5);
AddColumn(doji1,"doji" );
}
if(ParamToggle("DojiStar Pattern?","No,Yes",1))
{
DojiStar1=DojiStar(Open,High,Low,Close,5);
AddColumn(DojiStar1,"DojiStar" );
}
if(ParamToggle("DragonflyDoji Pattern?","No,Yes",1))
{
DragonflyDoji1=DragonflyDoji(Open,High,Low,Close,5);
AddColumn(DragonflyDoji1,"DragonflyDoji" );
}

if(ParamToggle("DarkCloudCover Pattern?","No,Yes",1))
{
DarkCloudCover1=DarkCloudCover(Open,High,Low,Close,5);
AddColumn(DarkCloudCover1,"DarkCloudCover" );
}

if(ParamToggle("hammer Pattern?","No,Yes",1))
{
hammer1=hammer(Open,High,Low,Close,5);
AddColumn(hammer1,"hammer" );
}



shubhascanner();

// plot plugin's result
//Plot(aPlugInResult, "aPlugInResult", colorRed);